<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.ProcessJobRelationMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.ProcessJobRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="job_basic_id" jdbcType="INTEGER" property="jobBasicId" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="operating_frequency" jdbcType="VARCHAR" property="operatingFrequency" />
    <result column="run_date" jdbcType="TIMESTAMP" property="runDate" />
    <result column="starting_work" jdbcType="VARCHAR" property="startingWork" />
    <result column="last_job_name" jdbcType="VARCHAR" property="lastJobName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, process_id, job_basic_id, level, operating_frequency, run_date, starting_work, 
    last_job_name, create_time, operator
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.ProcessJobRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_process_job_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_process_job_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_process_job_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.ProcessJobRelationExample">
    delete from t_process_job_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.ProcessJobRelation">
    insert into t_process_job_relation (id, process_id, job_basic_id, 
      level, operating_frequency, run_date, 
      starting_work, last_job_name, create_time, 
      operator)
    values (#{id,jdbcType=INTEGER}, #{processId,jdbcType=INTEGER}, #{jobBasicId,jdbcType=INTEGER}, 
      #{level,jdbcType=VARCHAR}, #{operatingFrequency,jdbcType=VARCHAR}, #{runDate,jdbcType=TIMESTAMP}, 
      #{startingWork,jdbcType=VARCHAR}, #{lastJobName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.ProcessJobRelation">
    insert into t_process_job_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="jobBasicId != null">
        job_basic_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="operatingFrequency != null">
        operating_frequency,
      </if>
      <if test="runDate != null">
        run_date,
      </if>
      <if test="startingWork != null">
        starting_work,
      </if>
      <if test="lastJobName != null">
        last_job_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobBasicId != null">
        #{jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="operatingFrequency != null">
        #{operatingFrequency,jdbcType=VARCHAR},
      </if>
      <if test="runDate != null">
        #{runDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startingWork != null">
        #{startingWork,jdbcType=VARCHAR},
      </if>
      <if test="lastJobName != null">
        #{lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.ProcessJobRelationExample" resultType="java.lang.Long">
    select count(*) from t_process_job_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_process_job_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
      <if test="record.jobBasicId != null">
        job_basic_id = #{record.jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.operatingFrequency != null">
        operating_frequency = #{record.operatingFrequency,jdbcType=VARCHAR},
      </if>
      <if test="record.runDate != null">
        run_date = #{record.runDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startingWork != null">
        starting_work = #{record.startingWork,jdbcType=VARCHAR},
      </if>
      <if test="record.lastJobName != null">
        last_job_name = #{record.lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_process_job_relation
    set id = #{record.id,jdbcType=INTEGER},
      process_id = #{record.processId,jdbcType=INTEGER},
      job_basic_id = #{record.jobBasicId,jdbcType=INTEGER},
      level = #{record.level,jdbcType=VARCHAR},
      operating_frequency = #{record.operatingFrequency,jdbcType=VARCHAR},
      run_date = #{record.runDate,jdbcType=TIMESTAMP},
      starting_work = #{record.startingWork,jdbcType=VARCHAR},
      last_job_name = #{record.lastJobName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.ProcessJobRelation">
    update t_process_job_relation
    <set>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobBasicId != null">
        job_basic_id = #{jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="operatingFrequency != null">
        operating_frequency = #{operatingFrequency,jdbcType=VARCHAR},
      </if>
      <if test="runDate != null">
        run_date = #{runDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startingWork != null">
        starting_work = #{startingWork,jdbcType=VARCHAR},
      </if>
      <if test="lastJobName != null">
        last_job_name = #{lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.ProcessJobRelation">
    update t_process_job_relation
    set process_id = #{processId,jdbcType=INTEGER},
      job_basic_id = #{jobBasicId,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      operating_frequency = #{operatingFrequency,jdbcType=VARCHAR},
      run_date = #{runDate,jdbcType=TIMESTAMP},
      starting_work = #{startingWork,jdbcType=VARCHAR},
      last_job_name = #{lastJobName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 流程节点信息查询条件 -->
  <sql id="dynamicPageWhere">
  	<if test="jobName != null">
  		and job.job_name = #{jobName}
 	</if>
  		and  pjr.process_id = #{processId}
  </sql>
   <select id="selectLastIdByOperator" parameterType="String" resultType="int">
  			SELECT
					id
				FROM
					t_process_job_relation
				WHERE
					operator =#{operator}
				ORDER BY
					create_time DESC
				LIMIT 1
  </select>
  <!-- 查询流程下面的节点 -->
  <select id="findAllRetMapByPage" parameterType="String" resultType="hashmap">
  	SELECT
		pjr.id,
		job.job_name,
		job.job_sketch,
		CASE
			WHEN pjr.starting_work = '0' THEN '起点'
	    WHEN pjr.starting_work = '1' THEN '终点'
	    ELSE '普通'
		END AS starting_work,
		(SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'OPERATING_FREQUENCY' AND sd.dict_code =  pjr.operating_frequency ) operating_frequency,
 		CASE WHEN pjr.operating_frequency = 1 THEN '无'
      			WHEN pjr.operating_frequency = 2 THEN
					( SELECT
							CASE dayofweek(pjr.run_date)
							WHEN 1 THEN '周日'
							WHEN 2 THEN '周一'
							WHEN 3 THEN '周二'
							WHEN 4 THEN '周三'
							WHEN 5 THEN '周四'
							WHEN 6 THEN '周五'
							WHEN 7 THEN '周六'
					END) 
  	else  CONCAT(DATE_FORMAT(pjr.run_date,'%e'),'号') 
	end as run_date,
 	DATE_FORMAT(pjr.run_date, '%H:%i:%s') run_time,
 	pjr.last_job_name
FROM
	t_process_job_relation pjr
LEFT JOIN t_job_basic job ON pjr.job_basic_id = job.id
WHERE
	1 = 1
 <include refid="dynamicPageWhere" />
 order by pjr.create_time desc 
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	SELECT
	  	count(*)
	 FROM
		 t_process_job_relation pjr
 	LEFT JOIN t_job_basic job ON pjr.job_basic_id = job.id
	 where  1= 1
 <include refid="dynamicPageWhere" />
  </select>
  
  
  <!-- 初始化上一作业名称 -->
  <select id="findLastJobByProcessId" parameterType="hashmap" resultType="hashmap">
  SELECT
  	  job.id,
  	   pjr.level,
	  job.job_name
  FROM
	 t_process_job_relation pjr
  LEFT JOIN t_job_basic job ON pjr.job_basic_id = job.id
  where pjr.process_id = #{processId}
  <if test="jobBasicId != null">
  	and pjr.job_basic_id != #{jobBasicId}
  </if>
  order by pjr.level asc
  </select>
  
  <!-- 修改子节点 回显 -->
  <select id="findRelationById" parameterType="int" resultType="hashmap">
   SELECT
  	  pjr.id,
	  job.job_name,
	  job.job_sketch,
	  case when pjr.starting_work = '0' then '是'
	  else '否' end as starting_work_zh,
	  pjr.starting_work,
      pjr.operating_frequency,
      DATE_FORMAT(pjr.run_date,'%Y-%m-%d %H:%i:%s') run_date,
      pjr.last_job_name,
      pjr.job_basic_id
  FROM
	 t_process_job_relation pjr
  LEFT JOIN t_job_basic job ON pjr.job_basic_id = job.id
  where pjr.id = #{id}
  </select>
  
  <select id="findLevelsByLastJobName" parameterType="hashmap" resultType="String">
   SELECT
		IFNULL(group_concat(level),'') levels
	FROM
	t_process_job_relation
WHERE
	job_basic_id in  
	<foreach item="item" index="index" collection="lastJobName.split(',')"  open="(" separator="," close=")">
                '${item}'
   </foreach>
  </select>
  
  <!-- 根据流程id 删除 -->
  <delete id="deleteByProcessId" parameterType="int">
 	 DELETE
	FROM
		t_process_job_relation
	WHERE
		process_id =#{processId}
  </delete>
</mapper>