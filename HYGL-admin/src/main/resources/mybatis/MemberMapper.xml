<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resale.background.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.Member" >
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_no" property="memberNo" jdbcType="VARCHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_sex" property="memberSex" jdbcType="CHAR" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="member_birthday" property="memberBirthday" jdbcType="DATE" />
    <result column="member_pwd" property="memberPwd" jdbcType="VARCHAR" />
    <result column="total_money" property="totalMoney" jdbcType="DECIMAL" />
    <result column="residue_money" property="residueMoney" jdbcType="DECIMAL" />
    <result column="aggregate_score" property="aggregateScore" jdbcType="INTEGER" />
    <result column="residue_score" property="residueScore" jdbcType="INTEGER" />
    <result column="member_status" property="memberStatus" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    member_id, member_no, member_name, member_sex, member_phone, member_birthday, member_pwd, 
    total_money, residue_money, aggregate_score, residue_score, member_status, create_time, 
    update_time, operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.resale.background.pojo.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.MemberExample" >
    delete from t_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.Member" >
    insert into t_member (member_id, member_no, member_name, 
      member_sex, member_phone, member_birthday, 
      member_pwd, total_money, residue_money, 
      aggregate_score, residue_score, member_status, 
      create_time, update_time, operator
      )
    values (#{memberId,jdbcType=INTEGER}, #{memberNo,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{memberSex,jdbcType=CHAR}, #{memberPhone,jdbcType=VARCHAR}, #{memberBirthday,jdbcType=DATE}, 
      #{memberPwd,jdbcType=VARCHAR}, #{totalMoney,jdbcType=DECIMAL}, #{residueMoney,jdbcType=DECIMAL}, 
      #{aggregateScore,jdbcType=INTEGER}, #{residueScore,jdbcType=INTEGER}, #{memberStatus,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.Member" >
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberNo != null" >
        member_no,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="memberSex != null" >
        member_sex,
      </if>
      <if test="memberPhone != null" >
        member_phone,
      </if>
      <if test="memberBirthday != null" >
        member_birthday,
      </if>
      <if test="memberPwd != null" >
        member_pwd,
      </if>
      <if test="totalMoney != null" >
        total_money,
      </if>
      <if test="residueMoney != null" >
        residue_money,
      </if>
      <if test="aggregateScore != null" >
        aggregate_score,
      </if>
      <if test="residueScore != null" >
        residue_score,
      </if>
      <if test="memberStatus != null" >
        member_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null" >
        #{memberNo,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        #{memberSex,jdbcType=CHAR},
      </if>
      <if test="memberPhone != null" >
        #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="memberBirthday != null" >
        #{memberBirthday,jdbcType=DATE},
      </if>
      <if test="memberPwd != null" >
        #{memberPwd,jdbcType=VARCHAR},
      </if>
      <if test="totalMoney != null" >
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="residueMoney != null" >
        #{residueMoney,jdbcType=DECIMAL},
      </if>
      <if test="aggregateScore != null" >
        #{aggregateScore,jdbcType=INTEGER},
      </if>
      <if test="residueScore != null" >
        #{residueScore,jdbcType=INTEGER},
      </if>
      <if test="memberStatus != null" >
        #{memberStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.MemberExample" resultType="java.lang.Integer" >
    select count(*) from t_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member
    <set >
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.memberNo != null" >
        member_no = #{record.memberNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null" >
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberSex != null" >
        member_sex = #{record.memberSex,jdbcType=CHAR},
      </if>
      <if test="record.memberPhone != null" >
        member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.memberBirthday != null" >
        member_birthday = #{record.memberBirthday,jdbcType=DATE},
      </if>
      <if test="record.memberPwd != null" >
        member_pwd = #{record.memberPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.totalMoney != null" >
        total_money = #{record.totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.residueMoney != null" >
        residue_money = #{record.residueMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.aggregateScore != null" >
        aggregate_score = #{record.aggregateScore,jdbcType=INTEGER},
      </if>
      <if test="record.residueScore != null" >
        residue_score = #{record.residueScore,jdbcType=INTEGER},
      </if>
      <if test="record.memberStatus != null" >
        member_status = #{record.memberStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member
    set member_id = #{record.memberId,jdbcType=INTEGER},
      member_no = #{record.memberNo,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_sex = #{record.memberSex,jdbcType=CHAR},
      member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      member_birthday = #{record.memberBirthday,jdbcType=DATE},
      member_pwd = #{record.memberPwd,jdbcType=VARCHAR},
      total_money = #{record.totalMoney,jdbcType=DECIMAL},
      residue_money = #{record.residueMoney,jdbcType=DECIMAL},
      aggregate_score = #{record.aggregateScore,jdbcType=INTEGER},
      residue_score = #{record.residueScore,jdbcType=INTEGER},
      member_status = #{record.memberStatus,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.Member" >
    update t_member
    <set >
      <if test="memberNo != null" >
        member_no = #{memberNo,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        member_sex = #{memberSex,jdbcType=CHAR},
      </if>
      <if test="memberPhone != null" >
        member_phone = #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="memberBirthday != null" >
        member_birthday = #{memberBirthday,jdbcType=DATE},
      </if>
      <if test="memberPwd != null" >
        member_pwd = #{memberPwd,jdbcType=VARCHAR},
      </if>
      <if test="totalMoney != null" >
        total_money = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="residueMoney != null" >
        residue_money = #{residueMoney,jdbcType=DECIMAL},
      </if>
      <if test="aggregateScore != null" >
        aggregate_score = #{aggregateScore,jdbcType=INTEGER},
      </if>
      <if test="residueScore != null" >
        residue_score = #{residueScore,jdbcType=INTEGER},
      </if>
      <if test="memberStatus != null" >
        member_status = #{memberStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.Member" >
    update t_member
    set member_no = #{memberNo,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=CHAR},
      member_phone = #{memberPhone,jdbcType=VARCHAR},
      member_birthday = #{memberBirthday,jdbcType=DATE},
      member_pwd = #{memberPwd,jdbcType=VARCHAR},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      residue_money = #{residueMoney,jdbcType=DECIMAL},
      aggregate_score = #{aggregateScore,jdbcType=INTEGER},
      residue_score = #{residueScore,jdbcType=INTEGER},
      member_status = #{memberStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  
    <!-- 页面列表查询条件 -->
  <sql id="whereClause">
  	<if test="memberPhone != null">
  		and m.member_phone  = #{memberPhone}
  	</if>
  	<if test="memberName != null">
  		and m.member_name like '${memberName}%'
  	</if>
  	<if test="operator != null">
  		and m.operator = #{operator}
  	</if>
  </sql>
  <!-- 查询会员列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
	SELECT
		m.member_id,
		m.member_no,
		m.member_name,
		m.member_phone,
		case when m.member_sex = '0' then '女'
		when m.member_sex = '1' then '男'
		end as member_sex,
		DATE_FORMAT(m.member_birthday,'%Y-%m-%d') member_birthday,
		m.total_money,
		m.residue_money,
		m.aggregate_score,
		m.residue_score,
		DATE_FORMAT(m.create_time,'%Y-%m-%d %H:%i:%s') create_time,
		e.name
	FROM
	t_member m
	left join t_employee e on m.operator = e.employee_id
	where m.member_status = '0'
		<include refid="whereClause" />
		order by m.create_time desc 
		limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT count(*) FROM t_member m  WHERE m.member_status = '0'
 	 <include refid="whereClause" />
  </select>
  
  <update id="deleteMember" parameterType="com.resale.background.pojo.Member">
	UPDATE t_member
	SET member_status = '1',
	update_time = now(),
	operator = #{operator}
	WHERE
	member_id = #{memberId}
  </update>
  
  <!-- 检查密码是否正确 -->
  <select id="checkPwd" parameterType="com.resale.background.pojo.Member"  resultMap="BaseResultMap">
   	select residue_money,residue_score from t_member where  member_id = #{memberId} and member_pwd = #{memberPwd}
  </select>
  
  <!-- 充值 - 修改总金额和可用余额 -->
  <update id="updateTotalMoney" parameterType="com.resale.background.pojo.Member">
 	update  t_member SET
	 	 total_money = total_money + #{totalMoney}, 
	 	residue_money=residue_money+#{totalMoney},
	 	update_time = now(),operator = #{operator} 
 	where  member_id = #{memberId}
  </update>
  
  <!-- 消费 - 修改可用额 -->
  <update id="updateResidueMoney" parameterType="com.resale.background.pojo.Member">
 	update  t_member SET residue_money = residue_money 
 	- #{totalMoney},
 	aggregate_score = aggregate_score+ #{totalMoney},
 	residue_score = residue_score + #{totalMoney},
 	update_time = now(),operator = #{operator} where  member_id = #{memberId}
  </update>
  
  <!-- 修改可用积分 -->
   <update id="updateResidueScore" parameterType="com.resale.background.pojo.Member">
 	update  t_member SET residue_score = residue_score 
 	- #{aggregateScore},
 	update_time = now(),operator = #{operator} where  member_id = #{memberId}
  </update>
  
  
  <!-- 查询生日提醒列表 -->
  <select id="findBirthdayAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
	SELECT
		member_id,
		member_name,
		member_phone,
		DATE_FORMAT(member_birthday,'%Y-%m-%d'),
		DATEDIFF(member_birthday,now()) sub_day
	FROM
		t_member
	WHERE
	DATEDIFF(member_birthday,now()) <![CDATA[<=]]> 5
	AND DATEDIFF(member_birthday,now()) >0
	<if test="operator != null">
  		and operator =#{operator}
  	</if>
  	and member_status = '0'
	order by  sub_day asc 
	limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findBirthdayAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT count(*) FROM t_member 
 	 WHERE
		DATEDIFF(member_birthday,now()) <![CDATA[<=]]> 5
		AND DATEDIFF(member_birthday,now()) >0
		<if test="operator != null">
	  		and operator =#{operator}
	  	</if>
  		and member_status = '0'
 	 <include refid="whereClause" />
  </select>
</mapper>