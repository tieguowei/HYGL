<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.MemberBillMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.MemberBill">
    <id column="bill_id" jdbcType="INTEGER" property="billId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="bill_type" jdbcType="CHAR" property="billType" />
    <result column="bill_money" jdbcType="DECIMAL" property="billMoney" />
    <result column="bill_remark" jdbcType="VARCHAR" property="billRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bill_id, member_id, bill_type, bill_money, bill_remark, create_time, update_time, 
    operator
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.MemberBillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_member_bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_member_bill
    where bill_id = #{billId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.MemberBillExample">
    delete from t_member_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.MemberBill">
    insert into t_member_bill (bill_id, member_id, bill_type, 
      bill_money, bill_remark, create_time, 
      update_time, operator)
    values (#{billId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{billType,jdbcType=CHAR}, 
      #{billMoney,jdbcType=DECIMAL}, #{billRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.MemberBill">
    insert into t_member_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        bill_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="billType != null">
        bill_type,
      </if>
      <if test="billMoney != null">
        bill_money,
      </if>
      <if test="billRemark != null">
        bill_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=CHAR},
      </if>
      <if test="billMoney != null">
        #{billMoney,jdbcType=DECIMAL},
      </if>
      <if test="billRemark != null">
        #{billRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.MemberBillExample" resultType="java.lang.Long">
    select count(*) from t_member_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_member_bill
    <set>
      <if test="record.billId != null">
        bill_id = #{record.billId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.billType != null">
        bill_type = #{record.billType,jdbcType=CHAR},
      </if>
      <if test="record.billMoney != null">
        bill_money = #{record.billMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.billRemark != null">
        bill_remark = #{record.billRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_member_bill
    set bill_id = #{record.billId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      bill_type = #{record.billType,jdbcType=CHAR},
      bill_money = #{record.billMoney,jdbcType=DECIMAL},
      bill_remark = #{record.billRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.MemberBill">
    update t_member_bill
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="billType != null">
        bill_type = #{billType,jdbcType=CHAR},
      </if>
      <if test="billMoney != null">
        bill_money = #{billMoney,jdbcType=DECIMAL},
      </if>
      <if test="billRemark != null">
        bill_remark = #{billRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.MemberBill">
    update t_member_bill
    set member_id = #{memberId,jdbcType=INTEGER},
      bill_type = #{billType,jdbcType=CHAR},
      bill_money = #{billMoney,jdbcType=DECIMAL},
      bill_remark = #{billRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where bill_id = #{billId,jdbcType=INTEGER}
  </update>
  
  <!-- 查询账单列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
	SELECT
		bill_id,
		member_id,
		case when bill_type = '0' then '充值'
		when bill_type = '1' then '消费'
		end as bill_type,
		bill_money,
		bill_remark,
		DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') create_time
	FROM
	t_member_bill
	WHERE
	member_id =#{memberId}
	order by create_time desc
	limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT count(*) FROM t_member_bill WHERE member_id =#{memberId}
  </select>
  
  <update id="updateMemberBill" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
				update t_member_bill
				set bill_money=${item.bill_money}
				where bill_id = ${item.bill_id}
        </foreach>
 </update>
 
 <!-- 查询今日 充值或者消费金额 -->
 <select id="getTodayMoney" parameterType="hashmap" resultType="String">
	 SELECT
		IFNULL(sum(b.bill_money),'0') billMoney
	FROM
		t_member_bill b
	left join t_member m on b.member_id  = m.member_id
	where b.bill_type =#{billType}
	and DATE_FORMAT(b.create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
 	<if test="operator != null">
		and b.operator =#{operator}
	</if>
	and m.member_status ='0' 
 </select>
 
 <!-- 查询当月充值或者消费金额 -->
 <select id="getMonthMoney" parameterType="hashmap" resultType="String">
	 SELECT
		IFNULL(sum(b.bill_money),'0') billMoney
	FROM
		t_member_bill b
    left join t_member m on b.member_id  = m.member_id
	where b.bill_type =#{billType}
	and DATE_FORMAT(b.create_time, '%Y-%m-%d') <![CDATA[>=]]>#{firstDay}
	and	DATE_FORMAT(b.create_time, '%Y-%m-%d') <![CDATA[<=]]>#{lastDay}
 	<if test="operator != null">
		and b.operator =#{operator}
	</if>
	and m.member_status ='0'
 </select>
</mapper>