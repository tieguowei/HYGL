<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.JobLogMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.JobLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="job_type" jdbcType="CHAR" property="jobType" />
    <result column="job_content" jdbcType="VARCHAR" property="jobContent" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="job_url" jdbcType="VARCHAR" property="jobUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, process_id, job_type, job_content, job_number, job_name, version, operator_time, 
    operator,job_url
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.JobLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_job_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_job_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.JobLogExample">
    delete from t_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.JobLog">
    insert into t_job_log (id, process_id, job_type, 
      job_content, job_number, job_name, 
      version, operator_time, operator,job_url
      )
    values (#{id,jdbcType=INTEGER}, #{processId,jdbcType=INTEGER}, #{jobType,jdbcType=CHAR}, 
      #{jobContent,jdbcType=VARCHAR}, #{jobNumber,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR},#{jobUrl}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.JobLog">
    insert into t_job_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobContent != null">
        job_content,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="jobUrl != null">
        job_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobContent != null">
        #{jobContent,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        #{jobUrl},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.JobLogExample" resultType="java.lang.Long">
    select count(*) from t_job_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_job_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=CHAR},
      </if>
      <if test="record.jobContent != null">
        job_content = #{record.jobContent,jdbcType=VARCHAR},
      </if>
      <if test="record.jobNumber != null">
        job_number = #{record.jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorTime != null">
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.jobUrl != null">
        job_url = #{record.jobUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_job_log
    set id = #{record.id,jdbcType=INTEGER},
      process_id = #{record.processId,jdbcType=INTEGER},
      job_type = #{record.jobType,jdbcType=CHAR},
      job_content = #{record.jobContent,jdbcType=VARCHAR},
      job_number = #{record.jobNumber,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      job_url = #{record.jobUrl,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.JobLog">
    update t_job_log
    <set>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobContent != null">
        job_content = #{jobContent,jdbcType=VARCHAR},
      </if>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
         job_url = #{jobUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.JobLog">
    update t_job_log
    set process_id = #{processId,jdbcType=INTEGER},
      job_type = #{jobType,jdbcType=CHAR},
      job_content = #{jobContent,jdbcType=VARCHAR},
      job_number = #{jobNumber,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      job_url = #{jobUrl,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
   <!-- 查询列表分页 -->
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
  	SELECT
		id,
		process_id,
		CASE
				WHEN job_type = 0 THEN 	'启动'
				WHEN job_type = 1 THEN '错误'
				WHEN job_type = 2 THEN 	'成功'
				END AS  job_type,
		 job_content,
		 job_number,
		 job_name,
		 job_url,
		 version,
 		DATE_FORMAT(operator_time,'%Y-%m-%d %H:%i:%s') operator_time,
 		operator
	FROM
		t_job_log
	where process_id = #{processId}
	and version = #{version}
	order by operator_time desc,job_number desc 
	limit #{startIndex},#{pageSize}
  </select>
  
   <!--查询列表 分页总数 -->
  <select id="findAllByPageCount" resultType="long" parameterType="hashmap">
  	SELECT
		count(1)
	FROM
		t_job_log
	where process_id = #{processId}
	and version = #{version}
  </select>
</mapper>