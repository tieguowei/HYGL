<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.JobBasicMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.JobBasic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_type" jdbcType="CHAR" property="jobType" />
    <result column="job_sketch" jdbcType="VARCHAR" property="jobSketch" />
    <result column="job_url" jdbcType="VARCHAR" property="jobUrl" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="job_status" jdbcType="CHAR" property="jobStatus" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_number, job_name, job_type, job_sketch, job_url, remark, job_status, operator_time, 
    operator
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.JobBasicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_job_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_job_basic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_job_basic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.JobBasicExample">
    delete from t_job_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.JobBasic" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into t_job_basic (id, job_number, job_name, 
      job_type, job_sketch, job_url, 
      remark, job_status, operator_time, 
      operator)
    values (#{id,jdbcType=INTEGER}, #{jobNumber,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{jobType,jdbcType=CHAR}, #{jobSketch,jdbcType=VARCHAR}, #{jobUrl,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{jobStatus,jdbcType=CHAR}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.JobBasic">
    insert into t_job_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobSketch != null">
        job_sketch,
      </if>
      <if test="jobUrl != null">
        job_url,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="jobStatus != null">
        job_status,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobSketch != null">
        #{jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        #{jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=CHAR},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.JobBasicExample" resultType="java.lang.Long">
    select count(*) from t_job_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_job_basic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobNumber != null">
        job_number = #{record.jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=CHAR},
      </if>
      <if test="record.jobSketch != null">
        job_sketch = #{record.jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="record.jobUrl != null">
        job_url = #{record.jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null">
        job_status = #{record.jobStatus,jdbcType=CHAR},
      </if>
      <if test="record.operatorTime != null">
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_job_basic
    set id = #{record.id,jdbcType=INTEGER},
      job_number = #{record.jobNumber,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=CHAR},
      job_sketch = #{record.jobSketch,jdbcType=VARCHAR},
      job_url = #{record.jobUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=CHAR},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.JobBasic">
    update t_job_basic
    <set>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobSketch != null">
        job_sketch = #{jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        job_url = #{jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null">
        job_status = #{jobStatus,jdbcType=CHAR},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.JobBasic">
    update t_job_basic
    set job_number = #{jobNumber,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=CHAR},
      job_sketch = #{jobSketch,jdbcType=VARCHAR},
      job_url = #{jobUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=CHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 查询所有job -->
  <select id="findJobBasicList" resultType="hashmap">
		SELECT
			<include refid="Base_Column_List"/>
		FROM
			t_job_basic  
		where job_status = '0'
  </select>
  
  <select id="findJobNamesByIds" parameterType="hashmap" resultType="String">
  SELECT
		IFNULL(group_concat(job_name),'') jobNames
	FROM
	t_job_basic
WHERE
	id IN 
	<foreach item="item" index="index" collection="ids.split(',')"  open="(" separator="," close=")">
                '${item}'
   </foreach>
  </select>
  
  
  
  
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
  	SELECT
		 id,
		 job_number,
		 job_name,
		 job_status,
		 job_url,
		 remark,
		 job_sketch,
		 operator,
		 DATE_FORMAT(operator_time,'%Y-%m-%d %H:%i:%s') operator_time,
		 (SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'JOB_TYPE' AND sd.dict_code =job_type ) job_type
	FROM
		t_job_basic
	<where>
		job_status = '0'
		
		<if test="jobName != null">
	  		and job_name like CONCAT('%',#{jobName},'%')
	 	</if>
	 	<if test="jobType != null">
	  		and job_type = #{jobType}
	 	</if>
	</where> 
	
	limit #{startIndex},#{pageSize}
  </select>
  <select id="findAllByPageCount" resultType="long" parameterType="hashmap">
  	SELECT COUNT(*) FROM t_job_basic 
  	<where>
		job_status = '0'
		<if test="jobName != null">
	  		and job_name like CONCAT('%',#{jobName},'%')
	 	</if>
	 	<if test="jobType != null">
	  		and job_type = #{jobType}
	 	</if>
	</where> 
	
  </select>
  
  <select id="checkJobBasic" parameterType="hashmap" resultMap="BaseResultMap">
  	SELECT
		<include refid="Base_Column_List" />
	FROM
		t_job_basic
	<where>
		job_status = '0'
		and job_name = #{jobName} and job_type = #{jobType} and job_url=#{jobUrl} 
		<if test="id != null">
			and id != #{id}
		</if>
	</where> 
	limit 1 
  </select>
 
  
  <update id="deleteJobBasicById" parameterType="map" >
    update t_job_basic
    <set >
      <if test="jobStatus != null and jobStatus !=''" >
        job_status = #{jobStatus},
      </if>
      <if test="operator != null and operator !=''" >
        operator = #{operator},
      </if>
      <if test="operatorTime != null " >
        operator_time = #{operatorTime},
      </if>
      <if test="jobStatus != null and jobStatus !=''" >
        job_status = #{jobStatus},
      </if>
     </set>
     where id =#{id}
  </update>
  <select id ="selectMaxJobNumber" parameterType="com.resale.background.pojo.JobBasic" resultMap="BaseResultMap">
  	select max(job_number) as job_number  from t_job_basic where job_type=#{jobType}
  </select>
  
  <!-- 批量添加作业 -->
  <insert id="insertJobBasic" parameterType="java.util.List">
 	 insert into t_job_basic (job_number, job_name, 
      job_type, job_sketch, job_url, 
      remark, job_status, operator_time, 
      operator) values
	<foreach collection="list" item="item" index="index" separator=",">
	  (#{item.jobNumber,jdbcType=VARCHAR}, #{item.jobName,jdbcType=VARCHAR}, 
      #{item.jobType,jdbcType=CHAR}, #{item.jobSketch,jdbcType=VARCHAR}, #{item.jobUrl,jdbcType=VARCHAR}, 
      #{item.remark,jdbcType=VARCHAR}, #{item.jobStatus,jdbcType=CHAR}, #{item.operatorTime,jdbcType=TIMESTAMP}, 
      #{item.operator,jdbcType=VARCHAR})
	</foreach>
</insert>

<!-- 流程监控 - 作业列表 - 作业详情回显 -->
<select id="findJobBasicAndRelation" parameterType="hashmap" resultType="hashmap">
	SELECT
		  job.job_number jobNumber,
		  job.job_name jobName,
		  job.job_type jobType,
		  job.job_sketch jobSketch,
		  job.job_url jobUrl,
		  pjr.process_id processId
	FROM
		t_job_basic job
	left join t_process_job_relation pjr on job.id = pjr.job_basic_id
	where job.id = #{jobBasicId}
	and pjr.process_id = #{processId}
</select>
</mapper>