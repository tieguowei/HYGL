<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.MemberScoreMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.MemberScore">
    <id column="score_id" jdbcType="INTEGER" property="scoreId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="score_type" jdbcType="CHAR" property="scoreType" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="score_remark" jdbcType="VARCHAR" property="scoreRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    score_id, member_id, score_type, score, score_remark, create_time, update_time, operator
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.MemberScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_member_score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_member_score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.MemberScoreExample">
    delete from t_member_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.MemberScore">
    insert into t_member_score (score_id, member_id, score_type, 
      score, score_remark, create_time, 
      update_time, operator)
    values (#{scoreId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{scoreType,jdbcType=CHAR}, 
      #{score,jdbcType=INTEGER}, #{scoreRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.MemberScore">
    insert into t_member_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scoreId != null">
        score_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="scoreType != null">
        score_type,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="scoreRemark != null">
        score_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scoreId != null">
        #{scoreId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="scoreType != null">
        #{scoreType,jdbcType=CHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="scoreRemark != null">
        #{scoreRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.MemberScoreExample" resultType="java.lang.Long">
    select count(*) from t_member_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_member_score
    <set>
      <if test="record.scoreId != null">
        score_id = #{record.scoreId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.scoreType != null">
        score_type = #{record.scoreType,jdbcType=CHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.scoreRemark != null">
        score_remark = #{record.scoreRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_member_score
    set score_id = #{record.scoreId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      score_type = #{record.scoreType,jdbcType=CHAR},
      score = #{record.score,jdbcType=INTEGER},
      score_remark = #{record.scoreRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      operator = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.MemberScore">
    update t_member_score
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="scoreType != null">
        score_type = #{scoreType,jdbcType=CHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="scoreRemark != null">
        score_remark = #{scoreRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.MemberScore">
    update t_member_score
    set member_id = #{memberId,jdbcType=INTEGER},
      score_type = #{scoreType,jdbcType=CHAR},
      score = #{score,jdbcType=INTEGER},
      score_remark = #{scoreRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=INTEGER}
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  
  <!--批量修改积分流水 -->
   <update id="updateMemberScore" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
				update t_member_score
				set score=${item.score}
				where score_id = ${item.score_id}
        </foreach>
 </update>
 
  <!-- 查询积分列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
	SELECT
		score_id,
		member_id,
		case when score_type = '0' then '增加'
		when score_type = '1' then '扣减'
		end as score_type,
		score,
		score_remark,
		DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') create_time
	FROM
	t_member_score
	where member_id =#{memberId}
	order by create_time desc
	limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT count(*) FROM t_member_score WHERE member_id =#{memberId}
  </select>
</mapper>