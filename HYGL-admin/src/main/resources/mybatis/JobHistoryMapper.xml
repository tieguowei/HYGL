<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resale.background.mapper.JobHistoryMapper">
  <resultMap id="BaseResultMap" type="com.resale.background.pojo.JobHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    <result column="job_type" jdbcType="CHAR" property="jobType" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_sketch" jdbcType="VARCHAR" property="jobSketch" />
    <result column="job_url" jdbcType="VARCHAR" property="jobUrl" />
    <result column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="job_basic_id" jdbcType="INTEGER" property="jobBasicId" />
    <result column="run_status" jdbcType="CHAR" property="runStatus" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="last_job_name" jdbcType="VARCHAR" property="lastJobName" />
    <result column="error_info" jdbcType="VARCHAR" property="errorInfo" />
    <result column="start_run_time" jdbcType="TIMESTAMP" property="startRunTime" />
    <result column="end_run_time" jdbcType="TIMESTAMP" property="endRunTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="starting_work" jdbcType="VARCHAR" property="startingWork" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, job_number, job_type, job_name, job_sketch, job_url, process_id, job_basic_id, 
    run_status, version, last_job_name, error_info, start_run_time, end_run_time, create_time,level,starting_work
  </sql>
  <select id="selectByExample" parameterType="com.resale.background.pojo.JobHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_job_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_job_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_job_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resale.background.pojo.JobHistoryExample">
    delete from t_job_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resale.background.pojo.JobHistory" useGeneratedKeys="true" keyProperty="id">
    insert into t_job_history (id, job_number, job_type, 
      job_name, job_sketch, job_url, 
      process_id, job_basic_id, run_status, 
      version, last_job_name, error_info, 
      start_run_time, end_run_time, create_time,level,starting_work
      )
    values (#{id,jdbcType=INTEGER}, #{jobNumber,jdbcType=VARCHAR}, #{jobType,jdbcType=CHAR}, 
      #{jobName,jdbcType=VARCHAR}, #{jobSketch,jdbcType=VARCHAR}, #{jobUrl,jdbcType=VARCHAR}, 
      #{processId,jdbcType=INTEGER}, #{jobBasicId,jdbcType=INTEGER}, #{runStatus,jdbcType=CHAR}, 
      #{version,jdbcType=VARCHAR}, #{lastJobName,jdbcType=VARCHAR}, #{errorInfo,jdbcType=VARCHAR}, 
      #{startRunTime,jdbcType=TIMESTAMP}, #{endRunTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
      #{level,jdbcType=VARCHAR},#{startingWork,jdbcType=VARCHAR}
      
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resale.background.pojo.JobHistory">
    insert into t_job_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobNumber != null">
        job_number,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobSketch != null">
        job_sketch,
      </if>
      <if test="jobUrl != null">
        job_url,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="jobBasicId != null">
        job_basic_id,
      </if>
      <if test="runStatus != null">
        run_status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastJobName != null">
        last_job_name,
      </if>
      <if test="errorInfo != null">
        error_info,
      </if>
      <if test="startRunTime != null">
        start_run_time,
      </if>
      <if test="endRunTime != null">
        end_run_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      
      <if test="level != null">
        level,
      </if>
      <if test="startingWork != null">
        starting_work,
      </if>
      
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobNumber != null">
        #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobSketch != null">
        #{jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        #{jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobBasicId != null">
        #{jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="runStatus != null">
        #{runStatus,jdbcType=CHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="lastJobName != null">
        #{lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="errorInfo != null">
        #{errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="startRunTime != null">
        #{startRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endRunTime != null">
        #{endRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="startingWork != null">
        #{startingWork,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resale.background.pojo.JobHistoryExample" resultType="java.lang.Long">
    select count(*) from t_job_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_job_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobNumber != null">
        job_number = #{record.jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=CHAR},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSketch != null">
        job_sketch = #{record.jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="record.jobUrl != null">
        job_url = #{record.jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
      <if test="record.jobBasicId != null">
        job_basic_id = #{record.jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="record.runStatus != null">
        run_status = #{record.runStatus,jdbcType=CHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.lastJobName != null">
        last_job_name = #{record.lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="record.errorInfo != null">
        error_info = #{record.errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.startRunTime != null">
        start_run_time = #{record.startRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endRunTime != null">
        end_run_time = #{record.endRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
       <if test="record.startingWork != null">
        starting_work = #{record.startingWork,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_job_history
    set id = #{record.id,jdbcType=INTEGER},
      job_number = #{record.jobNumber,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=CHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_sketch = #{record.jobSketch,jdbcType=VARCHAR},
      job_url = #{record.jobUrl,jdbcType=VARCHAR},
      process_id = #{record.processId,jdbcType=INTEGER},
      job_basic_id = #{record.jobBasicId,jdbcType=INTEGER},
      run_status = #{record.runStatus,jdbcType=CHAR},
      version = #{record.version,jdbcType=VARCHAR},
      last_job_name = #{record.lastJobName,jdbcType=VARCHAR},
      error_info = #{record.errorInfo,jdbcType=VARCHAR},
      start_run_time = #{record.startRunTime,jdbcType=TIMESTAMP},
      end_run_time = #{record.endRunTime,jdbcType=TIMESTAMP},
      level = #{record.level,jdbcType=VARCHAR},
      starting_work = #{record.startingWork,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resale.background.pojo.JobHistory">
    update t_job_history
    <set>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobSketch != null">
        job_sketch = #{jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        job_url = #{jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobBasicId != null">
        job_basic_id = #{jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="runStatus != null">
        run_status = #{runStatus,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="lastJobName != null">
        last_job_name = #{lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="errorInfo != null">
        error_info = #{errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="startRunTime != null">
        start_run_time = #{startRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endRunTime != null">
        end_run_time = #{endRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
       <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
       <if test="startingWork != null">
        starting_work = #{startingWork,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resale.background.pojo.JobHistory">
    update t_job_history
    set job_number = #{jobNumber,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=CHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_sketch = #{jobSketch,jdbcType=VARCHAR},
      job_url = #{jobUrl,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=INTEGER},
      job_basic_id = #{jobBasicId,jdbcType=INTEGER},
      run_status = #{runStatus,jdbcType=CHAR},
      version = #{version,jdbcType=VARCHAR},
      last_job_name = #{lastJobName,jdbcType=VARCHAR},
      error_info = #{errorInfo,jdbcType=VARCHAR},
      start_run_time = #{startRunTime,jdbcType=TIMESTAMP},
      end_run_time = #{endRunTime,jdbcType=TIMESTAMP},
      level = #{record.level,jdbcType=VARCHAR},
      starting_work = #{record.startingWork,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <!-- 列表查询条件 -->
  <sql id="dynamicPageWhere">
    <if test="processId != null">
  		and process_id  = #{processId}
 	</if>
 	<if test="version != null">
  		and version = #{version}
 	</if>
    <if test="jobName != null">
  		and job_name = #{jobName}
 	</if>
 	<if test="jobType != null">
  		and job_type = #{jobType}
 	</if>
 	<if test="runStatus != '' and runStatus != null ">
  		and run_status = #{runStatus}
 	</if>
  </sql>
  
   <!--作业历史列表分页 -->
	<select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
		SELECT
		   "2" flag,
			id historyId,
			job_number,
			job_name,
			(SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'JOB_TYPE' AND sd.dict_code =job_type ) job_type,
			run_status,
			(SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'JOB_RUN_STATUS' AND sd.dict_code =run_status ) run_status_zh,
			DATE_FORMAT(start_run_time,'%Y-%m-%d %H:%i:%s') start_run_time,
			DATE_FORMAT(end_run_time,'%Y-%m-%d %H:%i:%s') end_run_time,
			last_job_name,
			case when run_status = 2 then  ''
         	WHEN start_run_time  <![CDATA[ <=  ]]> end_run_time   THEN  
				     SEC_TO_TIME( TIMESTAMPDIFF( SECOND, start_run_time, end_run_time ))  
         	 else   '' 
		 	 end  run_duration,
			error_info,
			process_id,
			version,
			job_basic_id
			from t_job_history 
			where 1=1
		<include refid="dynamicPageWhere" />
		order by create_time desc 
		limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 列表分页总数 -->
	<select id="findAllByPageCount" resultType="long" parameterType="hashmap">
		SELECT count(*) FROM  t_job_history 
		where 1=1
		<include refid="dynamicPageWhere" />
	</select>
	
	
  <update id="updateByParams" parameterType="com.resale.background.pojo.JobHistory">
    update t_job_history
    <set>
      <if test="jobNumber != null">
        job_number = #{jobNumber,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=CHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobSketch != null">
        job_sketch = #{jobSketch,jdbcType=VARCHAR},
      </if>
      <if test="jobUrl != null">
        job_url = #{jobUrl,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=INTEGER},
      </if>
      <if test="jobBasicId != null">
        job_basic_id = #{jobBasicId,jdbcType=INTEGER},
      </if>
      <if test="runStatus != null">
        run_status = #{runStatus,jdbcType=CHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="lastJobName != null">
        last_job_name = #{lastJobName,jdbcType=VARCHAR},
      </if>
      <if test="errorInfo != null">
        error_info = #{errorInfo,jdbcType=VARCHAR},
      </if>
      <if test="startRunTime != null">
        start_run_time = #{startRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endRunTime != null">
        end_run_time = #{endRunTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
   <where>	
    1=1 
   	 <if test="processId != null">
        and process_id = #{processId,jdbcType=INTEGER}
      </if>
      <if test="jobBasicId != null">
        and job_basic_id = #{jobBasicId,jdbcType=INTEGER}
      </if>
      <if test="version != null">
        and  version = #{version,jdbcType=VARCHAR}
      </if>
   </where>
  </update>
  
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into t_job_history (id, job_number, job_type, 
      job_name, job_sketch, job_url, process_id, job_basic_id, run_status, 
      version, last_job_name, error_info,  start_run_time, end_run_time, create_time,level,starting_work
      )
    values 
     <foreach collection ="list" item="item" index= "index" separator =",">
	    (#{item.id,jdbcType=INTEGER}, #{item.jobNumber,jdbcType=VARCHAR}, #{item.jobType,jdbcType=CHAR}, 
	      #{item.jobName,jdbcType=VARCHAR}, #{item.jobSketch,jdbcType=VARCHAR}, #{item.jobUrl,jdbcType=VARCHAR}, 
	      #{item.processId,jdbcType=INTEGER}, #{item.jobBasicId,jdbcType=INTEGER}, #{item.runStatus,jdbcType=CHAR}, 
	      #{item.version,jdbcType=VARCHAR}, #{item.lastJobName,jdbcType=VARCHAR}, #{item.errorInfo,jdbcType=VARCHAR}, 
	      #{item.startRunTime,jdbcType=TIMESTAMP}, #{item.endRunTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP},
	      #{item.level,jdbcType=VARCHAR},#{item.startingWork,jdbcType=VARCHAR}
	      )
     </foreach>
  </insert>
  
  
  <select id="findList" resultMap="BaseResultMap" parameterType="hashmap">
	 SELECT id from t_job_history
		<where>
			  <if test="processId != null">
	       		 and process_id = #{processId,jdbcType=INTEGER}
		      </if>
		      <if test="jobBasicIds != null">
		        and job_basic_id in 
		       <foreach collection ="jobBasicIds" item="item" index= "index" open="("   separator =","  close=")">
		        	 #{item}
		        </foreach>
		      </if>
		      <if test="version != null">
		        and  version = #{version,jdbcType=VARCHAR}
		      </if>
		      <if test="runStatus != null">
		        and  run_status = #{runStatus,jdbcType=VARCHAR}
		      </if>
		</where>
  </select>
  
  <select id="findJobHistoryListByProcessId" parameterType="hashmap" resultType="hashmap">
    select 
   		<include refid="Base_Column_List" />
	FROM
		t_job_history
	WHERE
		process_id = #{processId}
	AND version = #{version}
	and run_status != 3
	ORDER BY level asc,starting_work DESC
  </select>
  
  
  
  <select id="findByParams" resultType="hashmap" parameterType="hashmap">
		SELECT
		   "2" flag,
			id historyId,
			job_number,
			job_name,
			(SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'JOB_TYPE' AND sd.dict_code =job_type ) job_type,
			run_status,
			(SELECT sd.dict_name FROM system_dict sd WHERE sd.dict_type = 'JOB_RUN_STATUS' AND sd.dict_code =run_status ) run_status_zh,
			DATE_FORMAT(start_run_time,'%Y-%m-%d %H:%i:%s') start_run_time,
			DATE_FORMAT(end_run_time,'%Y-%m-%d %H:%i:%s') end_run_time,
			last_job_name,
			case when run_status = 2 then  ''
        	 WHEN start_run_time  <![CDATA[ <=  ]]> end_run_time   THEN  
				     SEC_TO_TIME( TIMESTAMPDIFF( SECOND, start_run_time, end_run_time ))  
        	  else   '' 
		  	end  run_duration,
			error_info,
			process_id,
			version,
			job_basic_id
			from t_job_history 
		<where>
			1=1 
			<if test="ids!=null">
				and id in 
				 <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
	              	 #{item}       
	       		 </foreach>
			</if>
		</where>
		<include refid="dynamicPageWhere" />
		order by create_time desc 
  </select>
</mapper>